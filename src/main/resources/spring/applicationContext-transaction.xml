<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">


    <!--&lt;!&ndash; 事务管理器 对mybatis操作数据库事务控制，spring使用jdbc的事务控制类 &ndash;&gt;-->
    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--&lt;!&ndash; 数据源 dataSource在applicationContext-dao.xml中配置了 &ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 传播行为 &ndash;&gt;-->
            <!--<tx:method name="save*" propagation="REQUIRED" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED" />-->
            <!--<tx:method name="insert*" propagation="REQUIRED" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" />-->
            <!--<tx:method name="find*" propagation="SUPPORTS" read-only="true" />-->
            <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true" />-->
            <!--<tx:method name="select*" propagation="SUPPORTS" read-only="true" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!-- aop -->
    <!--<aop:config>-->
        <!--<aop:advisor advice-ref="txAdvice"-->
                     <!--pointcut="execution(* com.service.impl.*.*(..))" />-->
    <!--</aop:config>-->

    <aop:config proxy-target-class="true"/>
    <!--<aop:config>-->
        <!--&lt;!&ndash;定义切面&ndash;&gt;-->
        <!--<aop:aspect id="logAspect" ref="logInterceptor">-->
            <!--&lt;!&ndash; 定义切入点 (配置在com.gray.user.controller下所有的类在调用之前都会被拦截)&ndash;&gt;-->
            <!--<aop:pointcut expression="execution(* com.controller.*.*(..))" id="logPointCut"/>-->
            <!--&lt;!&ndash;方法执行之前被调用执行的&ndash;&gt;-->
            <!--<aop:before method="before" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;-->
            <!--<aop:after method="after" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

</beans>

